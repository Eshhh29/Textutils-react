{"version":3,"sources":["Navbar.js","Textform.js","Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","react_default","a","createElement","className","concat","mode","href","title","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","aboutText","onClick","toggleMode","style","height","width","role","for","Textform","_useState","useState","_useState2","Object","slicedToArray","text","setText","Fragment","backgroundColor","color","heading","value","onChange","event","console","log","target","rows","newText","toUpperCase","showAlert","toLowerCase","b","substring","length","my-6","split","defaultProps","Alert","alert","msg","App","setMode","_useState3","_useState4","setalert","message","setTimeout","cls","document","body","classList","remove","add","src_Alert","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","getElementById","render","StrictMode","src_App"],"mappings":"mMAEe,SAASA,EAAOC,GAC3B,OACIC,EAAAC,EAAAC,cAAA,OAAKC,UAAS,kCAAAC,OAAoCL,EAAMM,KAA1C,QAAAD,OAAqDL,EAAMM,OAC/EL,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACbH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,eAAeG,KAAK,MAAMP,EAAMQ,OAC7CP,EAAAC,EAAAC,cAAA,UAAQC,UAAU,iBAAiBK,KAAK,SAASC,iBAAe,WAAWC,iBAAe,0BAA0BC,gBAAc,yBAAyBC,gBAAc,QAAQC,aAAW,qBAC1Lb,EAAAC,EAAAC,cAAA,QAAMC,UAAU,yBAElBH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,2BAA2BW,GAAG,0BAC3Cd,EAAAC,EAAAC,cAAA,MAAIC,UAAU,mCACZH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,YACZH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,kBAAkBY,eAAa,OAAOT,KAAK,MAAxD,SAEFN,EAAAC,EAAAC,cAAA,MAAIC,UAAU,YACZH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,WAAWG,KAAK,MAAMP,EAAMiB,aAG7ChB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,0BAA0Bc,QAAS,WAAKlB,EAAMmB,WAAW,YAAaC,MAAO,CAACC,OAAO,OAASC,MAAO,UAGpHrB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,yBAAyBc,QAAS,WAAKlB,EAAMmB,WAAW,WAAYC,MAAO,CAACC,OAAO,OAASC,MAAO,UAGlHrB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,0BAA0Bc,QAAS,WAAKlB,EAAMmB,WAAW,YAAaC,MAAO,CAACC,OAAO,OAASC,MAAO,UAGpHrB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,0BAA0Bc,QAAS,WAAKlB,EAAMmB,WAAW,YAAaC,MAAO,CAACC,OAAO,OAASC,MAAO,WAItHrB,EAAAC,EAAAC,cAAA,OAAKC,UAAS,+BAAAC,OAA8C,UAAbL,EAAMM,KAAvC,oBAClBL,EAAAC,EAAAC,cAAA,SAAOC,UAAU,mBAAmBc,QAAS,WAAKlB,EAAMmB,WAAW,OAAQV,KAAK,WAAWc,KAAK,SAASR,GAAG,2BAC5Gd,EAAAC,EAAAC,cAAA,SAAOC,UAAU,mBAAmBoB,IAAI,0BAAxC,mBChCa,SAASC,EAASzB,GAAO,IAAA0B,EACXC,mBAAS,mBADEC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAC7BK,EAD6BH,EAAA,GACtBI,EADsBJ,EAAA,GAwBtC,OACE3B,EAAAC,EAAAC,cAAAF,EAAAC,EAAA+B,SAAA,KACAhC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YAAYgB,MAAO,CAACc,gBAA6B,SAAblC,EAAMM,KAAgB,QAAQ,QAAU6B,MAAM,UAC7FlC,EAAAC,EAAAC,cAAA,UAAKH,EAAMoC,QAAX,KACAnC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QAErBH,EAAAC,EAAAC,cAAA,YAAUC,UAAU,eAAeiC,MAAON,EAAMO,SAhBxB,SAACC,GACnBC,QAAQC,IAAI,aACZT,EAAQO,EAAMG,OAAOL,QAc+CjB,MAAO,CAACc,gBAA6B,SAAblC,EAAMM,KAAgB,QAAQ,QAAU6B,MAAM,SAAUpB,GAAG,QAAQ4B,KAAK,OAE5K1C,EAAAC,EAAAC,cAAA,UAAQC,UAAU,uBAAuBc,QA9BjB,WAEhB,IAAI0B,EAAUb,EAAKc,cACnBb,EAAQY,GACR5C,EAAM8C,UAAU,4BA0BxB,wBACA7C,EAAAC,EAAAC,cAAA,UAAQC,UAAU,uBAAuBc,QAzBjB,WAEhB,IAAI0B,EAAUb,EAAKgB,cACnBf,EAAQY,GACR5C,EAAM8C,UAAU,4BAqBxB,wBACA7C,EAAAC,EAAAC,cAAA,UAAQC,UAAU,uBAAuBc,QAfjB,SAACqB,GACjB,IAAIS,EAAIjB,EAAKkB,UAAUlB,EAAKmB,QAC5BlB,EAAQgB,KAahB,WAEI/C,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YAAY+C,QAAA,GACvBlD,EAAAC,EAAAC,cAAA,+BACAF,EAAAC,EAAAC,cAAA,SAAI4B,EAAKqB,MAAMF,OAAf,cAAkCnB,EAAKmB,OAAvC,cACAjD,EAAAC,EAAAC,cAAA,SAAI,KAAQ4B,EAAKmB,OAAjB,oBACAjD,EAAAC,EAAAC,cAAA,qBACAF,EAAAC,EAAAC,cAAA,SAAI4B,EAAKmB,OAAO,EAAEnB,EAAK,qCDD/BhC,EAAOsD,aAAc,CACjB7C,MAAM,kBE7BK8C,MAbf,SAAetD,GAKb,OACCA,EAAMuD,OAAStD,EAAAC,EAAAC,cAAA,OAAKC,UAAS,eAAAC,OAAiBL,EAAMuD,MAAM9C,KAA7B,gCAAiEc,KAAK,SACpGtB,EAAAC,EAAAC,cAAA,cAASH,EAAMuD,MAAM9C,MADL,KACsBT,EAAMuD,MAAMC,MCkDrCC,MAlDf,WAAe,IAAA/B,EACWC,mBAAS,SADpBC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GACNpB,EADMsB,EAAA,GACA8B,EADA9B,EAAA,GAAA+B,EAEahC,mBAAS,MAFtBiC,EAAA/B,OAAAC,EAAA,EAAAD,CAAA8B,EAAA,GAENJ,EAFMK,EAAA,GAECC,EAFDD,EAAA,GAGPd,EAAU,SAACgB,EAAUrD,GACzBoD,EAAS,CACPL,IAAIM,EACJrD,KAAKA,IAEPsD,WAAW,WACTF,EAAS,OACR,MAuBL,OACC5D,EAAAC,EAAAC,cAAAF,EAAAC,EAAA+B,SAAA,KAEChC,EAAAC,EAAAC,cAACJ,EAAD,CAAQS,MAAM,YAAYF,KAAMA,EAAMa,WAjBtB,SAAC6C,GANjBC,SAASC,KAAKC,UAAUC,OAAO,YAC/BH,SAASC,KAAKC,UAAUC,OAAO,WAC/BH,SAASC,KAAKC,UAAUC,OAAO,aAC/BH,SAASC,KAAKC,UAAUC,OAAO,cAC/BH,SAASC,KAAKC,UAAUC,OAAO,cAI/BH,SAASC,KAAKC,UAAUE,IAAI,MAAOL,GACxB,UAAR1D,GACDoD,EAAQ,QACRO,SAASC,KAAK9C,MAAMc,gBAAgB,OACpCY,EAAU,6BAA+B,aAGzCY,EAAQ,SACRO,SAASC,KAAK9C,MAAMc,gBAAgB,QACpCY,EAAU,8BAA+B,cAO3C7C,EAAAC,EAAAC,cAACmE,EAAD,CAAOf,MAAOA,IACdtD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACfH,EAAAC,EAAAC,cAACsB,EAAD,CAAUqB,UAAYA,EAAWV,QAAQ,iBAAiB9B,KAAMA,OCpCrDiE,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxCC,EAAAC,EAAA,GAAAC,KAAAF,EAAAG,KAAA,UAAqBD,KAAK,SAAAE,GAAiD,IAA9CC,EAA8CD,EAA9CC,OAAQC,EAAsCF,EAAtCE,OAAQC,EAA8BH,EAA9BG,OAAQC,EAAsBJ,EAAtBI,OAAQC,EAAcL,EAAdK,QAC3DJ,EAAOP,GACPQ,EAAOR,GACPS,EAAOT,GACPU,EAAOV,GACPW,EAAQX,MCDDY,IAASC,WAAWpB,SAASqB,eAAe,SACpDC,OACHtF,EAAAC,EAAAC,cAACF,EAAAC,EAAMsF,WAAP,KACEvF,EAAAC,EAAAC,cAACsF,EAAD,QAOJlB","file":"static/js/main.0a04319e.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nexport default function Navbar(props){\r\n    return (\r\n        <nav className={`navbar navbar-expand-lg-navbar-${props.mode} bg-${props.mode}`}>\r\n  <div className=\"container-fluid\">\r\n    <a className=\"navbar-brand\" href=\"/#\">{props.title}</a>\r\n    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n      <span className=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n      <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n        <li className=\"nav-item\">\r\n          <a className=\"nav-link active\" aria-current=\"page\" href=\"/#\">Home</a>\r\n        </li>\r\n        <li className=\"nav-item\">\r\n          <a className=\"nav-link\" href=\"/#\">{props.aboutText}</a>\r\n        </li>\r\n      </ul>\r\n      <div className=\"d-flex\">\r\n        <div className=\"bg-primary rounded mx-2\" onClick={()=>{props.toggleMode('primary')}} style={{height:'30px' , width :'30px'}}>\r\n\r\n        </div>\r\n        <div className=\"bg-danger rounded mx-2\" onClick={()=>{props.toggleMode('danger')}} style={{height:'30px' , width :'30px'}}>\r\n\r\n        </div>\r\n        <div className=\"bg-success rounded mx-2\" onClick={()=>{props.toggleMode('success')}} style={{height:'30px' , width :'30px'}}>\r\n\r\n        </div>\r\n        <div className=\"bg-warning rounded mx-2\" onClick={()=>{props.toggleMode('warning')}} style={{height:'30px' , width :'30px'}}>\r\n\r\n        </div>\r\n      </div>\r\n      <div className={`form-check form-switch text-${props.mode==='light'}?'dark:'light'}`}>\r\n  <input className=\"form-check-input\" onClick={()=>{props.toggleMode(null)}} type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\"/>\r\n  <label className=\"form-check-label\" for=\"flexSwitchCheckDefault\">Toggle mode</label>\r\n</div>\r\n    </div>\r\n  </div>\r\n</nav>\r\n    )\r\n}\r\nNavbar.propTypes ={title:PropTypes.string.isRequired}\r\nNavbar.defaultProps ={\r\n    title:'Set title here'\r\n}","import React , { useState }from 'react'\r\n\r\n\r\nexport default function Textform(props) {\r\n    const [text , setText] = useState('Enter text here');\r\n    const handleUpClick=()=>{\r\n        // console.log(\"Uppercase was clicked\" + text)\r\n        let newText = text.toUpperCase();\r\n        setText(newText)\r\n        props.showAlert(\"Converted to uppercase\")\r\n    }\r\n    const handleLoCLick=()=>{\r\n        // console.log(\"Uppercase was clicked\" + text)\r\n        let newText = text.toLowerCase();\r\n        setText(newText)\r\n        props.showAlert(\"Converted to Lowercase\")\r\n    }\r\n    const handleOnChange =(event)=>{\r\n        console.log(\"On chnage\")\r\n        setText(event.target.value)\r\n        \r\n    }\r\n    const handledelete= (event)=>{\r\n        let b = text.substring(text.length)\r\n        setText(b)\r\n      }\r\n    \r\n  return (\r\n    <>\r\n    <div className='container' style={{backgroundColor:props.mode==='dark' ? 'white':'black' , color:'white'}}>\r\n        <h1>{props.heading} </h1>\r\n        <div className=\"mb-3\">\r\n  \r\n  <textarea className=\"form-control\" value={text} onChange={handleOnChange} style={{backgroundColor:props.mode==='dark' ? 'white':'black' , color:'white'}} id=\"myBox\" rows=\"8\"></textarea>\r\n</div>\r\n<button className=\"btn-btn-primary mx-2\" onClick={handleUpClick}>Convert to uppercase</button>\r\n<button className=\"btn-btn-primary mx-2\" onClick={handleLoCLick}>Convert to Lowercase</button>\r\n<button className=\"btn-btn-primary mx-2\" onClick={handledelete}>Delete</button>\r\n    </div>\r\n    <div className=\"container\" my-6>\r\n        <h2>Your text summary</h2>\r\n        <p>{text.split.length} words and {text.length} chracters</p>\r\n        <p>{0.008 * text.length} minutes to read</p>\r\n        <h3>Preview</h3>\r\n        <p>{text.length>0?text:\"Enter something to preview here\"}</p>\r\n    </div>\r\n    \r\n    \r\n    </>\r\n    \r\n  )\r\n}\r\n","import React from 'react'\r\n\r\nfunction Alert(props) {\r\n    const capitalize =(word)=>{\r\n        const lower = word.toLowercase();\r\n        return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n    }\r\n  return (\r\n   props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n  <strong>{props.alert.type}</strong> :{props.alert.msg}\r\n  \r\n</div>\r\n  )\r\n}\r\n\r\nexport default Alert","// import logo from './logo.svg';\nimport './App.css';\nimport Navbar from './Navbar';\nimport About from './About';\nimport Textform from './Textform'\nimport React , {useState} from 'react';\nimport Alert from './Alert';\n\n\nfunction App() {\n  const [mode, setMode] = useState('light');\n  const [alert, setalert] = useState(null);\n  const showAlert=(message , type)=>{\n    setalert({\n      msg:message,\n      type:type\n    })\n    setTimeout(() => {\n      setalert(null)\n    }, 3000);\n  }\n  const removeBodyClases=()=>{\n    document.body.classList.remove('bg-light')\n    document.body.classList.remove('bg-dark')\n    document.body.classList.remove('bg-danger')\n    document.body.classList.remove('bg-warning')\n    document.body.classList.remove('bg-success')\n  }\n  const toggleMode =(cls)=>{\n    removeBodyClases();\n    document.body.classList.add('bg-' +cls)\n    if(mode=== 'light'){\n      setMode('dark');\n      document.body.style.backgroundColor='grey'\n      showAlert(\"Dark mode has been enabled\" , \"success\")\n    }\n    else{\n      setMode('light');\n      document.body.style.backgroundColor='white'\n      showAlert(\"Light mode has been enabled\" ,\"sucess\");\n    }\n  }\n  return (\n   <>\n   \n    <Navbar title=\"TextUtils\" mode={mode} toggleMode={toggleMode}/>\n    <Alert alert={alert}></Alert>\n    <div className=\"container my-3\">\n    <Textform showAlert ={showAlert} heading=\"Enter the text\" mode={mode}/>\n    {/* <About/> */}\n    \n    </div>\n    \n   \n   </>\n    \n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}